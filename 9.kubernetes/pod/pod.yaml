apiVersion: v1
kind: Pod
metadata:
  name: string
  namespace: string
  labels:
    - name: string
  annotations:
    - name: string
spec:
  containers:
    - name: string
      image: string
      imagePullPolicy: [Always | Never | IfNotPresent ]
      command: [string]
      args: [string]
      workingDir: string

      ## 挂载 volumes 定义的 volume
      volumeMounts:
        - name: string
          mountPath: string
          readOnly: boolean
      ports:
        - name: string
          containerPort: int
          hostPort: int
          protocol: string
      env:
        ## 设置环境变量
        - name: string
          value: string

## 如果环境变量创建失败，会记录 Event 来提示环境变量无法生成，但并不阻止 Pod 的启动
        ## 从 ConfigMap 中获取变量
        - name: ${ENV_NAME} # 环境变量名称
          valueFrom:
              configMapKeyRef:
                  name: ${ConfigMap_Name} ## ConfigMap 名称
                  key: ${Key_Name}        ## ConfigMap Key 名称

      ## 直接根据 ConfigMap 中的 kev=value 生成环境变量
      envFrom:  
        - configMapRef: 
            name: ${Config_Name} 
        
      resources:
        limits:
          cpu: string
          memory: string
        requests:
          cpu: string
          memory: string
      livenessProbe:
        exec:
          command: [string]
        httpGet:
          path: string
          port: string
          host: string
          scheme: string
          httpHeaders:
            - name: string
              value: string
        tcpSocket:
          port: number
        initialDelaySeconds: 0
        timeoutSeconds: 0
        periodSeconds: 0
        successThershold: 0
        failureThreshold: 0
      securityCOntext:
        privileged: false
    restartPolicy: [Always | Never | OnFailure]
    nodeSelector: object
    imagePullSecrets:
      - name: string
    hostNetwork: false

    ## 定义 Pod 级别的 volumes, 可供 containers volumes mount (挂载)
    volumes:
      - name: string
        emptyDir: {}
        hostPath:
          path: string
        secret:
          secretName: string
          items:
            - key: string
              value: string

        ## 对于应用的配置文件使用 ConfigMap 的方式，需要创建一个存储卷 ConfigMap volume, 然后将该 ConfigMap volume 挂载到 容器中
        configMap:
          name: string ## configMap name
          items:
            - key: string ## configMap key
              value: string ## 将 key 对应的 value 映射为对应的文件名

      